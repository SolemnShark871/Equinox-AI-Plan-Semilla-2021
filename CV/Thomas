{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"GPU","colab":{"name":"Thomas","provenance":[{"file_id":"https://github.com/tensorflow/docs/blob/master/site/en/tutorials/load_data/images.ipynb","timestamp":1634733100487}],"collapsed_sections":["k3CjSytwAb5o","p4SoGk8QBgDr"]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"hoQQiZDB6URn"},"source":["## Setup"]},{"cell_type":"code","metadata":{"id":"3vhAMaIOBIee","executionInfo":{"status":"ok","timestamp":1635884979057,"user_tz":0,"elapsed":2292,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}}},"source":["import numpy as np\n","import os\n","import PIL\n","import PIL.Image\n","import tensorflow as tf\n","from google.colab import drive\n","import cv2\n","import random\n","from google.colab.patches import cv2_imshow\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import classification_report"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rN-Pc6Zd6awg","executionInfo":{"status":"ok","timestamp":1635884980143,"user_tz":0,"elapsed":1089,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"c0f8078c-b4d2-4cee-9c09-dd54d906c16c"},"source":["# Make directory drive \n","\n","drive.mount('/content/drive', force_remount= True)\n","os.chdir('/content/drive/MyDrive/CV')    ##THOMAS\n","#os.chdir('/content/drive/MyDrive/ASESOFTWARE/CV/')     ## SEBASTIAN\n","os.listdir(\"./\")"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]},{"output_type":"execute_result","data":{"text/plain":["['Train',\n"," 'Validation',\n"," 'processed_dataset',\n"," 'Procesamiento-Dataset.ipynb',\n"," 'Favio',\n"," 'Original model:.gdoc',\n"," 'Leidy',\n"," 'models',\n"," 'Cristian Notebooks',\n"," 'Thomas',\n"," 'Group  Workings.ipynb',\n"," 'Sebastian',\n"," 'study_case.ipynb']"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OnIGtu9zRJXq","executionInfo":{"status":"ok","timestamp":1635885006286,"user_tz":0,"elapsed":257,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"550cd36c-2980-4568-9448-12394d8f1e2d"},"source":["\n","#Save the train & test datapaths\n","# Thomas \n","DATA_PATH_TRAIN = \"/content/drive/MyDrive/CV/processed_dataset/Train\"\n","DATA_PATH_TEST = \"/content/drive/MyDrive/CV/processed_dataset/Test\"\n","DATA_PATH_RESCALE = '/content/drive/MyDrive/CV/processed_dataset/Rescale Train/' \n","DATA_PATH_RESCALE_TEST = \"/content/drive/MyDrive/CV/processed_dataset/Rescale Test/\"\n","DATA_PATH_RESCALE_VAL_20_PERCENT = \"/content/drive/MyDrive/CV/processed_dataset/Rescale augmented validation/\"\n","\n","DATA_PATH_RESCALE_ORIGINAL_80_PERCENT = '/content/drive/MyDrive/CV/processed_dataset/Rescale augmented train/' \n","DATA_PATH_RESCALE_ORIGINAL_100_PERCENT = '/content/drive/MyDrive/CV/processed_dataset/Rescale Original Train/' \n","DATA_PATH_TRANSFER_LEARNING = '/content/drive/MyDrive/CV/processed_dataset/Rescale Original Train/'\n","###############################################################\n","\n","#Actual datapaths \n","\n","DATA_PATH_1024_TRAIN = \"/content/drive/MyDrive/CV/processed_dataset/1024x1024_100_PERCENTAGE_SIN_AUG/\"\n","DATA_PATH_1024_TEST = \"/content/drive/MyDrive/CV/processed_dataset/1024x1024_TEST/\"\n","\n","DATA_PATH_NO_SWIM_TRAIN = '/content/drive/MyDrive/CV/processed_dataset/1024x1024_Train_No_SwimmingPool/'\n","DATA_PATH_NO_SWIM_TEST = '/content/drive/MyDrive/CV/processed_dataset/1024x1024_Test_No_SwimmingPool/'\n","\n","classes = os.listdir(DATA_PATH_TRAIN)\n","print(classes)\n","\n","classes = os.listdir(DATA_PATH_NO_SWIM_TRAIN)\n","print(classes)"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["['harbor', 'trafic', 'airport', 'sportsField', 'swimmingPool', 'bridge']\n","['harbor', 'trafic', 'airport', 'sportsField', 'bridge']\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QhewYCxhXQBX","executionInfo":{"status":"ok","timestamp":1635884703621,"user_tz":0,"elapsed":2774,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"1cee827a-94a2-4319-d6ec-1b96598333bb"},"source":["image_list = list()\n","\n","for i in range(len(classes)):\n","\n","  #image_count = len(os.listdir(DATA_PATH_TRAIN+ \"/{}\".format(classes[i])))\n","  image_count = len(os.listdir(DATA_PATH_TRAIN+ \"/{}\".format(classes[i])))\n","  print(i)\n","  image_list.append(image_count)\n","  print(\"The number of images of {} is {}\".format(classes[i],image_count))\n","\n","print(sum(image_list))"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["0\n","The number of images of harbor is 383\n","1\n","The number of images of trafic is 308\n","2\n","The number of images of airport is 178\n","3\n","The number of images of sportsField is 363\n","4\n","The number of images of bridge is 129\n","1361\n"]}]},{"cell_type":"markdown","metadata":{"id":"k3CjSytwAb5o"},"source":["#MODELO THOMAS SIN DATA AUGMENTATION \n"]},{"cell_type":"code","metadata":{"id":"xjyKWy048Afl","executionInfo":{"status":"ok","timestamp":1635843821374,"user_tz":0,"elapsed":198,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}}},"source":["#Original Model (base model), no need to run \n","\n","num_classes = 6\n","\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Rescaling(1./255),                  #Rescale the pixels between 0,1\n","\n","  tf.keras.layers.Conv2D(15, 5, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (512 X 512 )RGB * 1 FILTRO DE 3 CANALES (5X5)) --> 1 IMAGEN (512 X 512) DE 15 CANALES \n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (256 X 256) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (256 X 256 ) DE 15 CANALES  * 1 FILTROS DE 15 CANALES (3 X 3)) --> 1 IMAGEN (256 X 256) DE 12 CANALES \n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (128 X 128) DE 12 CANALES\n","\n","  tf.keras.layers.Conv2D(15, 3, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (128 X 128 ) DE 12 CANALES  * 1 FILTROS DE 12 CANALES (3 X 3)) --> 1 IMAGEN (128 X 128) DE 15 CANALES \n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (64 X 64) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (64 X 64) DE 15 CANALES * 1 FILTRO DE 15 CANALES (3 X 3)) --> 1 IMAGEN (64 X 64) DE 12 CANALES\n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (32 X 32) DE 12 CANALES \n","  \n","  tf.keras.layers.Flatten(),                                          # 1 VECTOR DE 12288 X 1\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(1024, activation='relu'), #change this\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(256, activation='relu'),\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(128, activation='relu'),\n","  tf.keras.layers.Dense(num_classes)\n","])"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wd_-xtf6D6DV","executionInfo":{"status":"ok","timestamp":1635873043280,"user_tz":0,"elapsed":11754,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"02c39a8b-c6da-44f9-ab7c-dd31661f9e8f"},"source":["batch_size = 32\n","img_height = 512\n","img_width = 512\n","\n","#Create the train CV split\n","\n","data_dir = DATA_PATH_1024_TRAIN\n","\n","train_ds = tf.keras.utils.image_dataset_from_directory(\n","  data_dir,\n","  validation_split=0.2,\n","  subset=\"training\",\n","  seed=123,\n","  image_size=(img_height, img_width),\n","  batch_size=batch_size)\n","\n","\n","#Create the CV dataset\n","\n","val_ds = tf.keras.utils.image_dataset_from_directory(\n","  data_dir,\n","  validation_split=0.2,\n","  subset=\"validation\",\n","  seed=123,\n","  image_size=(img_height, img_width),\n","  batch_size=batch_size)\n","\n","#Create the CV test data\n","test_ds = tf.keras.utils.image_dataset_from_directory(\n","  DATA_PATH_1024_TEST,\n","  batch_size = 32,\n","  image_size=(img_height, img_width))"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 1411 files belonging to 6 classes.\n","Using 1129 files for training.\n","Found 1411 files belonging to 6 classes.\n","Using 282 files for validation.\n","Found 458 files belonging to 6 classes.\n"]}]},{"cell_type":"code","metadata":{"id":"LdR0BzCcqxw0","executionInfo":{"status":"ok","timestamp":1635873100907,"user_tz":0,"elapsed":206,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}}},"source":["#Thomas' Change: remove some complexity from the model \n","\n","\n","num_classes = 6\n","\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Rescaling(1./255),                  #Rescale the pixels between 0,1\n","\n","  tf.keras.layers.Conv2D(15, 5, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (512 X 512 )RGB * 1 FILTRO DE 3 CANALES (5X5)) --> 1 IMAGEN (512 X 512) DE 15 CANALES \n","  tf.keras.layers.AveragePooling2D(),                                     # 1 IMAGEN (256 X 256) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (256 X 256 ) DE 15 CANALES  * 1 FILTROS DE 15 CANALES (3 X 3)) --> 1 IMAGEN (256 X 256) DE 12 CANALES \n","  tf.keras.layers.AveragePooling2D(),                                      # 1 IMAGEN (128 X 128) DE 12 CANALES\n","\n","  tf.keras.layers.Conv2D(15, 3, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (128 X 128 ) DE 12 CANALES  * 1 FILTROS DE 12 CANALES (3 X 3)) --> 1 IMAGEN (128 X 128) DE 15 CANALES \n","  tf.keras.layers.AveragePooling2D(),                                       # 1 IMAGEN (64 X 64) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (64 X 64) DE 15 CANALES * 1 FILTRO DE 15 CANALES (3 X 3)) --> 1 IMAGEN (64 X 64) DE 12 CANALES\n","  tf.keras.layers.AveragePooling2D(),                                       # 1 IMAGEN (32 X 32) DE 12 CANALES \n","  #tf.keras.layers.AveragePooling2D(),                                       #2 IMAGEN (16*16) DE 12 CANALES\n","\n","  tf.keras.layers.Flatten(),                                          # 1 VECTOR DE 12288 X 1\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  #tf.keras.layers.Dense(1024, activation='relu'), #change this\n","  #.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(256, activation='relu'),\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(128, activation='relu'),\n","  tf.keras.layers.Dense(num_classes)\n","])"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"t_BlmsnmsEr4","executionInfo":{"status":"ok","timestamp":1635873107276,"user_tz":0,"elapsed":234,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}}},"source":["model.compile(\n","  optimizer='adam',\n","  loss=tf.losses.SparseCategoricalCrossentropy(from_logits=True),\n","  metrics=['accuracy'])"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S08ZKKODsnGW","executionInfo":{"status":"ok","timestamp":1635846023123,"user_tz":0,"elapsed":448696,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"10e120fc-85f1-4b1b-babf-987882d40205"},"source":["history_no_aug=  model.fit(\n","  train_ds,\n","  validation_data=val_ds,\n","  epochs=10     #only train for a few epochs so this tutorial runs quickly\n",")"],"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","36/36 [==============================] - 145s 3s/step - loss: 1.6806 - accuracy: 0.2516 - val_loss: 1.6014 - val_accuracy: 0.3511\n","Epoch 2/10\n","36/36 [==============================] - 21s 494ms/step - loss: 1.6204 - accuracy: 0.3242 - val_loss: 1.5270 - val_accuracy: 0.3617\n","Epoch 3/10\n","36/36 [==============================] - 21s 496ms/step - loss: 1.5144 - accuracy: 0.3897 - val_loss: 1.5027 - val_accuracy: 0.4504\n","Epoch 4/10\n","36/36 [==============================] - 20s 492ms/step - loss: 1.4231 - accuracy: 0.4482 - val_loss: 1.3116 - val_accuracy: 0.4965\n","Epoch 5/10\n","36/36 [==============================] - 20s 488ms/step - loss: 1.2281 - accuracy: 0.5306 - val_loss: 1.2070 - val_accuracy: 0.5496\n","Epoch 6/10\n","36/36 [==============================] - 20s 486ms/step - loss: 1.1345 - accuracy: 0.5766 - val_loss: 1.1647 - val_accuracy: 0.6064\n","Epoch 7/10\n","36/36 [==============================] - 20s 494ms/step - loss: 1.0114 - accuracy: 0.6368 - val_loss: 1.2063 - val_accuracy: 0.6135\n","Epoch 8/10\n","36/36 [==============================] - 20s 485ms/step - loss: 0.8827 - accuracy: 0.6670 - val_loss: 1.1057 - val_accuracy: 0.6525\n","Epoch 9/10\n","36/36 [==============================] - 21s 495ms/step - loss: 0.7145 - accuracy: 0.7378 - val_loss: 1.3905 - val_accuracy: 0.6135\n","Epoch 10/10\n","36/36 [==============================] - 21s 497ms/step - loss: 0.6185 - accuracy: 0.7936 - val_loss: 1.4804 - val_accuracy: 0.5106\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VQ9G3zRk4gsL","executionInfo":{"status":"ok","timestamp":1635844774101,"user_tz":0,"elapsed":194,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"07fc6ed5-df89-4a1c-9717-38ae0afeaeda"},"source":["model.summary()"],"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_5\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","rescaling_5 (Rescaling)      (None, 512, 512, 3)       0         \n","_________________________________________________________________\n","conv2d_20 (Conv2D)           (None, 512, 512, 15)      1140      \n","_________________________________________________________________\n","average_pooling2d_19 (Averag (None, 256, 256, 15)      0         \n","_________________________________________________________________\n","dropout_21 (Dropout)         (None, 256, 256, 15)      0         \n","_________________________________________________________________\n","conv2d_21 (Conv2D)           (None, 256, 256, 12)      1632      \n","_________________________________________________________________\n","average_pooling2d_20 (Averag (None, 128, 128, 12)      0         \n","_________________________________________________________________\n","conv2d_22 (Conv2D)           (None, 128, 128, 15)      1635      \n","_________________________________________________________________\n","average_pooling2d_21 (Averag (None, 64, 64, 15)        0         \n","_________________________________________________________________\n","dropout_22 (Dropout)         (None, 64, 64, 15)        0         \n","_________________________________________________________________\n","conv2d_23 (Conv2D)           (None, 64, 64, 12)        1632      \n","_________________________________________________________________\n","average_pooling2d_22 (Averag (None, 32, 32, 12)        0         \n","_________________________________________________________________\n","flatten_5 (Flatten)          (None, 12288)             0         \n","_________________________________________________________________\n","dropout_23 (Dropout)         (None, 12288)             0         \n","_________________________________________________________________\n","dense_16 (Dense)             (None, 256)               3145984   \n","_________________________________________________________________\n","dropout_24 (Dropout)         (None, 256)               0         \n","_________________________________________________________________\n","dense_17 (Dense)             (None, 128)               32896     \n","_________________________________________________________________\n","dense_18 (Dense)             (None, 6)                 774       \n","=================================================================\n","Total params: 3,185,693\n","Trainable params: 3,185,693\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RKszKR1Ib76A","executionInfo":{"status":"ok","timestamp":1635844829105,"user_tz":0,"elapsed":42325,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"3dff1a64-b130-4168-85a7-c8fe7c9eee5e"},"source":["model.evaluate(test_ds)"],"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["15/15 [==============================] - 42s 1s/step - loss: 2.7741 - accuracy: 0.4716\n"]},{"output_type":"execute_result","data":{"text/plain":["[2.774071216583252, 0.471615731716156]"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"PaEEgaKFc4Wb","executionInfo":{"status":"error","timestamp":1635846540045,"user_tz":0,"elapsed":5143,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"705a1285-8c20-4be2-a902-662a13829a63"},"source":["# Report with the recall, precision and f1-score\n","real_labels = []\n","for images, labels in test_ds:\n","    real_labels = real_labels + labels.numpy().tolist()\n","\n","report = classification_report(real_labels, prediction_list, zero_division = 0)\n","print(report)"],"execution_count":40,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-40-8c1c4ceb433f>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0mreal_labels\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mreal_labels\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mlabels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnumpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtolist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m \u001b[0mreport\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclassification_report\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreal_labels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprediction_list\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mzero_division\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreport\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36mclassification_report\u001b[0;34m(y_true, y_pred, labels, target_names, sample_weight, digits, output_dict, zero_division)\u001b[0m\n\u001b[1;32m   1969\u001b[0m     \"\"\"\n\u001b[1;32m   1970\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1971\u001b[0;31m     \u001b[0my_type\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_check_targets\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1972\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1973\u001b[0m     \u001b[0mlabels_given\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/metrics/_classification.py\u001b[0m in \u001b[0;36m_check_targets\u001b[0;34m(y_true, y_pred)\u001b[0m\n\u001b[1;32m     78\u001b[0m     \u001b[0my_pred\u001b[0m \u001b[0;34m:\u001b[0m \u001b[0marray\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mindicator\u001b[0m \u001b[0mmatrix\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     79\u001b[0m     \"\"\"\n\u001b[0;32m---> 80\u001b[0;31m     \u001b[0mcheck_consistent_length\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     81\u001b[0m     \u001b[0mtype_true\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtype_of_target\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_true\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     82\u001b[0m     \u001b[0mtype_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtype_of_target\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/sklearn/utils/validation.py\u001b[0m in \u001b[0;36mcheck_consistent_length\u001b[0;34m(*arrays)\u001b[0m\n\u001b[1;32m    210\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muniques\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    211\u001b[0m         raise ValueError(\"Found input variables with inconsistent numbers of\"\n\u001b[0;32m--> 212\u001b[0;31m                          \" samples: %r\" % [int(l) for l in lengths])\n\u001b[0m\u001b[1;32m    213\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    214\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Found input variables with inconsistent numbers of samples: [458, 457]"]}]},{"cell_type":"markdown","metadata":{"id":"_l44p-fcdh81"},"source":["#MODELO THOMAS SIN SWIMMING POOLS\n"]},{"cell_type":"code","metadata":{"id":"9on9rLWxdh82","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1635842981855,"user_tz":0,"elapsed":220,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"2264bc79-4f5d-48dd-b9bc-3e3350dc6387"},"source":["#Thomas' Change: remove some complexity from the model \n","\n","num_classes = len(os.listdir(DATA_PATH_NO_SWIM_TRAIN))\n","print(num_classes)\n","\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Rescaling(1./255),                  #Rescale the pixels between 0,1\n","\n","  tf.keras.layers.Conv2D(15, 5, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (512 X 512 )RGB * 1 FILTRO DE 3 CANALES (5X5)) --> 1 IMAGEN (512 X 512) DE 15 CANALES \n","  tf.keras.layers.AveragePooling2D(),                                     # 1 IMAGEN (256 X 256) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (256 X 256 ) DE 15 CANALES  * 1 FILTROS DE 15 CANALES (3 X 3)) --> 1 IMAGEN (256 X 256) DE 12 CANALES \n","  tf.keras.layers.AveragePooling2D(),                                      # 1 IMAGEN (128 X 128) DE 12 CANALES\n","\n","  tf.keras.layers.Conv2D(15, 3, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (128 X 128 ) DE 12 CANALES  * 1 FILTROS DE 12 CANALES (3 X 3)) --> 1 IMAGEN (128 X 128) DE 15 CANALES \n","  tf.keras.layers.AveragePooling2D(),                                       # 1 IMAGEN (64 X 64) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (64 X 64) DE 15 CANALES * 1 FILTRO DE 15 CANALES (3 X 3)) --> 1 IMAGEN (64 X 64) DE 12 CANALES\n","  tf.keras.layers.AveragePooling2D(),                                       # 1 IMAGEN (32 X 32) DE 12 CANALES \n","\n","  tf.keras.layers.Flatten(),                                          # 1 VECTOR DE 12288 X 1\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","#tf.keras.layers.Dense(1024, activation='relu'), #change this\n","  #.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(256, activation='relu'),\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(128, activation='relu'),\n","  tf.keras.layers.Dense(num_classes)\n","])"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["5\n"]}]},{"cell_type":"code","metadata":{"id":"NQlASubKpOzh","executionInfo":{"status":"ok","timestamp":1635885016309,"user_tz":0,"elapsed":1066,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}}},"source":["#Original Model (base model)\n","\n","num_classes = 6\n","\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Rescaling(1./255),                  #Rescale the pixels between 0,1\n","\n","  tf.keras.layers.Conv2D(15, 5, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (512 X 512 )RGB * 1 FILTRO DE 3 CANALES (5X5)) --> 1 IMAGEN (512 X 512) DE 15 CANALES \n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (256 X 256) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (256 X 256 ) DE 15 CANALES  * 1 FILTROS DE 15 CANALES (3 X 3)) --> 1 IMAGEN (256 X 256) DE 12 CANALES \n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (128 X 128) DE 12 CANALES\n","\n","  tf.keras.layers.Conv2D(15, 3, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (128 X 128 ) DE 12 CANALES  * 1 FILTROS DE 12 CANALES (3 X 3)) --> 1 IMAGEN (128 X 128) DE 15 CANALES \n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (64 X 64) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (64 X 64) DE 15 CANALES * 1 FILTRO DE 15 CANALES (3 X 3)) --> 1 IMAGEN (64 X 64) DE 12 CANALES\n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (32 X 32) DE 12 CANALES \n","  \n","  tf.keras.layers.Flatten(),                                          # 1 VECTOR DE 12288 X 1\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(1024, activation='relu'), #change this\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(256, activation='relu'),\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(128, activation='relu'),\n","  tf.keras.layers.Dense(num_classes, activation='softmax')\n","])"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kpuk8yfGdh82","executionInfo":{"status":"ok","timestamp":1635886088966,"user_tz":0,"elapsed":528,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"85fd620c-bc69-40b7-97b1-5a4a2e2a0b8c"},"source":["#Modify this cell to remove swimming pools\n","\n","batch_size = 32\n","img_height = 512\n","img_width = 512\n","\n","#Create the train CV split\n","\n","data_dir = DATA_PATH_NO_SWIM_TRAIN \n","\n","train_ds = tf.keras.utils.image_dataset_from_directory(\n","  data_dir,\n","  validation_split=0.2,\n","  subset=\"training\",\n","  seed=123,\n","  image_size=(img_height, img_width),\n","  batch_size=batch_size)\n","\n","\n","#Create the CV dataset\n","\n","val_ds = tf.keras.utils.image_dataset_from_directory(\n","  data_dir,\n","  validation_split=0.2,\n","  subset=\"validation\",\n","  seed=123,\n","  image_size=(img_height, img_width),\n","  batch_size=batch_size)\n","\n","#Create the test data\n","test_ds = tf.keras.utils.image_dataset_from_directory(\n","  DATA_PATH_NO_SWIM_TEST,\n","  batch_size = 32,\n","  shuffle = False,\n","  image_size=(img_height, img_width))"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 1396 files belonging to 5 classes.\n","Using 1117 files for training.\n","Found 1396 files belonging to 5 classes.\n","Using 279 files for validation.\n","Found 457 files belonging to 5 classes.\n"]}]},{"cell_type":"code","metadata":{"id":"Kb-l95aldh82","executionInfo":{"status":"ok","timestamp":1635885033608,"user_tz":0,"elapsed":207,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}}},"source":["model.compile(\n","  optimizer='adam',\n","  loss=tf.losses.SparseCategoricalCrossentropy(from_logits=False),\n","  metrics=['accuracy'])"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8El9ALfudh82","executionInfo":{"status":"ok","timestamp":1635885594281,"user_tz":0,"elapsed":553582,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"49ba0290-b86e-48c2-aad2-c722862cd6db"},"source":["history_no_pool=  model.fit(\n","  train_ds,\n","  validation_data=val_ds,\n","  epochs=15     #only train for a few epochs \n",")"],"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/15\n","35/35 [==============================] - 116s 3s/step - loss: 1.6357 - accuracy: 0.2471 - val_loss: 1.5902 - val_accuracy: 0.2473\n","Epoch 2/15\n","35/35 [==============================] - 20s 507ms/step - loss: 1.5468 - accuracy: 0.2820 - val_loss: 1.4698 - val_accuracy: 0.3656\n","Epoch 3/15\n","35/35 [==============================] - 20s 505ms/step - loss: 1.4166 - accuracy: 0.3859 - val_loss: 1.3910 - val_accuracy: 0.3226\n","Epoch 4/15\n","35/35 [==============================] - 20s 506ms/step - loss: 1.2565 - accuracy: 0.4933 - val_loss: 1.2591 - val_accuracy: 0.5161\n","Epoch 5/15\n","35/35 [==============================] - 20s 508ms/step - loss: 1.0511 - accuracy: 0.6141 - val_loss: 1.1652 - val_accuracy: 0.5591\n","Epoch 6/15\n","35/35 [==============================] - 20s 507ms/step - loss: 0.9695 - accuracy: 0.6365 - val_loss: 1.0435 - val_accuracy: 0.6165\n","Epoch 7/15\n","35/35 [==============================] - 21s 513ms/step - loss: 0.8078 - accuracy: 0.6992 - val_loss: 1.1109 - val_accuracy: 0.6129\n","Epoch 8/15\n","35/35 [==============================] - 21s 511ms/step - loss: 0.5936 - accuracy: 0.7833 - val_loss: 1.1436 - val_accuracy: 0.5771\n","Epoch 9/15\n","35/35 [==============================] - 21s 514ms/step - loss: 0.4550 - accuracy: 0.8353 - val_loss: 1.2477 - val_accuracy: 0.6129\n","Epoch 10/15\n","35/35 [==============================] - 21s 518ms/step - loss: 0.3628 - accuracy: 0.8738 - val_loss: 1.3070 - val_accuracy: 0.5950\n","Epoch 11/15\n","35/35 [==============================] - 21s 515ms/step - loss: 0.2869 - accuracy: 0.9033 - val_loss: 1.4531 - val_accuracy: 0.5520\n","Epoch 12/15\n","35/35 [==============================] - 21s 519ms/step - loss: 0.2153 - accuracy: 0.9230 - val_loss: 1.5632 - val_accuracy: 0.5591\n","Epoch 13/15\n","35/35 [==============================] - 21s 521ms/step - loss: 0.2113 - accuracy: 0.9409 - val_loss: 1.8029 - val_accuracy: 0.4624\n","Epoch 14/15\n","35/35 [==============================] - 21s 509ms/step - loss: 0.2815 - accuracy: 0.9132 - val_loss: 1.9666 - val_accuracy: 0.5771\n","Epoch 15/15\n","35/35 [==============================] - 21s 516ms/step - loss: 0.1060 - accuracy: 0.9687 - val_loss: 1.7800 - val_accuracy: 0.6022\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3rhMcWGodh82","executionInfo":{"status":"ok","timestamp":1635885594998,"user_tz":0,"elapsed":4,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"c36aa7c0-cec5-4ac8-ca30-57982977bf7d"},"source":["model.summary()"],"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","rescaling (Rescaling)        (None, 512, 512, 3)       0         \n","_________________________________________________________________\n","conv2d (Conv2D)              (None, 512, 512, 15)      1140      \n","_________________________________________________________________\n","max_pooling2d (MaxPooling2D) (None, 256, 256, 15)      0         \n","_________________________________________________________________\n","dropout (Dropout)            (None, 256, 256, 15)      0         \n","_________________________________________________________________\n","conv2d_1 (Conv2D)            (None, 256, 256, 12)      1632      \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 128, 128, 12)      0         \n","_________________________________________________________________\n","conv2d_2 (Conv2D)            (None, 128, 128, 15)      1635      \n","_________________________________________________________________\n","max_pooling2d_2 (MaxPooling2 (None, 64, 64, 15)        0         \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 64, 64, 15)        0         \n","_________________________________________________________________\n","conv2d_3 (Conv2D)            (None, 64, 64, 12)        1632      \n","_________________________________________________________________\n","max_pooling2d_3 (MaxPooling2 (None, 32, 32, 12)        0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 12288)             0         \n","_________________________________________________________________\n","dropout_2 (Dropout)          (None, 12288)             0         \n","_________________________________________________________________\n","dense (Dense)                (None, 1024)              12583936  \n","_________________________________________________________________\n","dropout_3 (Dropout)          (None, 1024)              0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 256)               262400    \n","_________________________________________________________________\n","dropout_4 (Dropout)          (None, 256)               0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 128)               32896     \n","_________________________________________________________________\n","dense_3 (Dense)              (None, 6)                 774       \n","=================================================================\n","Total params: 12,886,045\n","Trainable params: 12,886,045\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZQtWOgBFdh83","executionInfo":{"status":"ok","timestamp":1635885694177,"user_tz":0,"elapsed":82155,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"807fe350-f659-4d32-d57b-1feb7bb732d5"},"source":["model.evaluate(test_ds)"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["15/15 [==============================] - 45s 1s/step - loss: 2.0778 - accuracy: 0.5449\n"]},{"output_type":"execute_result","data":{"text/plain":["[2.077787399291992, 0.5448577404022217]"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZVytS8sNdh83","executionInfo":{"status":"ok","timestamp":1635886115434,"user_tz":0,"elapsed":10210,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"a626fae7-fece-4735-c3d6-13776789d9ea"},"source":["pred = model.predict(test_ds)\n","\n","prediction_list = []\n","\n","for i in range(pred.shape[0]):\n","    prediction_list.append(pred[i].argmax())\n","    \n","len(prediction_list)\n","\n","\n","# Report with the recall, precision and f1-score\n","real_labels = []\n","for images, labels in test_ds:\n","    real_labels = real_labels + labels.numpy().tolist()\n","\n","report = classification_report(real_labels, prediction_list, zero_division = 0)\n","print(report)"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.50      0.37      0.43        59\n","           1       0.40      0.16      0.23        37\n","           2       0.50      0.78      0.61       129\n","           3       0.61      0.55      0.58       136\n","           4       0.61      0.48      0.53        96\n","\n","    accuracy                           0.54       457\n","   macro avg       0.52      0.47      0.48       457\n","weighted avg       0.55      0.54      0.53       457\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"Ff3P9luXsSG8","executionInfo":{"status":"ok","timestamp":1635874393222,"user_tz":0,"elapsed":1137,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"2243aafd-3837-43bd-fbaa-28ad0874f545"},"source":["# Plot the accuracy for test and train data\n","#os.mkdir(RESULTS_PATH)\n","fig = plt.figure(figsize = (7, 5), dpi = 144)\n","ax = fig.add_subplot(1, 1, 1)\n","\n","ax.plot(history_no_pool.history['accuracy'])\n","ax.plot(history_no_pool.history['val_accuracy'])\n","\n","ax.set_title('Model Accuracy Base Model')\n","ax.set_xlabel('Epoch')\n","#plt.xticks(np.arange(0, 1.1, step = 0.1), rotation = 'vertical')\n","ax.set_ylabel('Accuracy')\n","ax.legend(['Training', 'Validation'], loc = 'best')\n","ax.grid()\n","#ax.figure.savefig(RESULTS_PATH + 'accuracy_transfer_learning_ResNet50.png')\n","#ax.figure.savefig(RESULTS_PATH + 'accuracy_standarized1.png')\n","\n","# Plot the accuracy for test and train data\n","#os.mkdir(RESULTS_PATH)\n","fig = plt.figure(figsize = (7, 5), dpi = 144)\n","ax = fig.add_subplot(1, 1, 1)\n","\n","ax.plot(history_no_pool.history['loss'])\n","ax.plot(history_no_pool.history['val_loss'])\n","\n","ax.set_title('Model Loss Base Model')\n","ax.set_xlabel('Epoch')\n","#plt.xticks(np.arange(0, 1.1, step = 0.1), rotation = 'vertical')\n","ax.set_ylabel('Loss')\n","ax.legend(['Training', 'Validation'], loc = 'best')\n","ax.grid()\n","#ax.figure.savefig(RESULTS_PATH + 'accuracy_transfer_learning_ResNet50.png')\n","#ax.figure.savefig(RESULTS_PATH + 'accuracy_standarized1.png')"],"execution_count":23,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1008x720 with 1 Axes>"]},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1008x720 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"p4SoGk8QBgDr"},"source":["#MODELO CON DATA AUGMENTATION"]},{"cell_type":"code","metadata":{"id":"KiJDoh1sO2fB"},"source":["batch_size = 64\n","img_height = 512\n","img_width = 512"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pes1YlOXO6aF","executionInfo":{"status":"ok","timestamp":1635346720270,"user_tz":-60,"elapsed":530,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"0f4469f4-30c2-4b98-b326-e2e4d6a35cd8"},"source":["#Create the train CV split\n","\n","data_dir = DATA_PATH_RESCALE \n","\n","train_ds = tf.keras.utils.image_dataset_from_directory(\n","  data_dir,\n","  validation_split=0.2,\n","  subset=\"training\",\n","  seed=123,\n","  image_size=(img_height, img_width),\n","  batch_size=batch_size)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 3536 files belonging to 6 classes.\n","Using 2829 files for training.\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EGGXUT1rPBJw","executionInfo":{"status":"ok","timestamp":1635346723965,"user_tz":-60,"elapsed":478,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"fa693b40-21e0-4dbf-a797-6fdebb54a31f"},"source":["#Create the CV dataset\n","\n","val_ds = tf.keras.utils.image_dataset_from_directory(\n","  data_dir,\n","  validation_split=0.2,\n","  subset=\"validation\",\n","  seed=123,\n","  image_size=(img_height, img_width),\n","  batch_size=batch_size)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 3536 files belonging to 6 classes.\n","Using 707 files for validation.\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"APQDkAQpS7xw","executionInfo":{"status":"ok","timestamp":1635346740157,"user_tz":-60,"elapsed":178,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"a15ba4f2-d633-42fb-875c-5dc5fd5c65d8"},"source":["test_ds = tf.keras.utils.image_dataset_from_directory(\n","  DATA_PATH_RESCALE_TEST,\n","  batch_size = 458,\n","  image_size=(img_height, img_width))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 458 files belonging to 6 classes.\n"]}]},{"cell_type":"code","metadata":{"id":"Lj8XHNo-Ga_Y"},"source":["#Thomas' Change: remove some complexity from the model \n","\n","\n","num_classes = 6\n","\n","model = tf.keras.Sequential([\n","  tf.keras.layers.Rescaling(1./255),                  #Rescale the pixels between 0,1\n","\n","  tf.keras.layers.Conv2D(15, 5, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (512 X 512 )RGB * 1 FILTRO DE 3 CANALES (5X5)) --> 1 IMAGEN (512 X 512) DE 15 CANALES \n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (256 X 256) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (256 X 256 ) DE 15 CANALES  * 1 FILTROS DE 15 CANALES (3 X 3)) --> 1 IMAGEN (256 X 256) DE 12 CANALES \n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (128 X 128) DE 12 CANALES\n","\n","  tf.keras.layers.Conv2D(15, 3, activation='relu',padding = 'same'),  # 15 VECES (1 IMAGEN (128 X 128 ) DE 12 CANALES  * 1 FILTROS DE 12 CANALES (3 X 3)) --> 1 IMAGEN (128 X 128) DE 15 CANALES \n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (64 X 64) DE 15 CANALES\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","\n","  tf.keras.layers.Conv2D(12, 3, activation='relu',padding = 'same'),  # 12 VECES (1 IMAGEN (64 X 64) DE 15 CANALES * 1 FILTRO DE 15 CANALES (3 X 3)) --> 1 IMAGEN (64 X 64) DE 12 CANALES\n","  tf.keras.layers.MaxPooling2D(),                                     # 1 IMAGEN (32 X 32) DE 12 CANALES \n","  \n","  tf.keras.layers.Flatten(),                                          # 1 VECTOR DE 12288 X 1\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","#tf.keras.layers.Dense(1024, activation='relu'), #change this\n","  #.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(256, activation='relu'),\n","  tf.keras.layers.Dropout(0.25, noise_shape=None, seed=None),\n","  tf.keras.layers.Dense(128, activation='relu'),\n","  tf.keras.layers.Dense(num_classes)\n","])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4MKfA8FzGed9"},"source":["model.compile(\n","  optimizer='adam',\n","  loss=tf.losses.SparseCategoricalCrossentropy(from_logits=False),\n","  metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fAA89Kf-760K","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1635347589801,"user_tz":-60,"elapsed":394486,"user":{"displayName":"Thomas Clarke","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"16859766705372105422"}},"outputId":"1f753d8c-87dd-40e9-c533-f32bc12afad8"},"source":["model.fit(\n","  train_ds,\n","  validation_data=val_ds,\n","  epochs=10     \n",")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/10\n","45/45 [==============================] - 33s 689ms/step - loss: 2.4982 - accuracy: 0.1838 - val_loss: 2.6125 - val_accuracy: 0.2178\n","Epoch 2/10\n","45/45 [==============================] - 33s 689ms/step - loss: 2.4982 - accuracy: 0.1789 - val_loss: 2.6125 - val_accuracy: 0.2178\n","Epoch 3/10\n","45/45 [==============================] - 33s 689ms/step - loss: 2.4982 - accuracy: 0.1810 - val_loss: 2.6125 - val_accuracy: 0.2178\n","Epoch 4/10\n","45/45 [==============================] - 33s 686ms/step - loss: 2.4982 - accuracy: 0.1782 - val_loss: 2.6125 - val_accuracy: 0.2178\n","Epoch 5/10\n","45/45 [==============================] - 33s 681ms/step - loss: 2.4982 - accuracy: 0.1828 - val_loss: 2.6125 - val_accuracy: 0.2178\n","Epoch 6/10\n","45/45 [==============================] - 33s 678ms/step - loss: 2.4982 - accuracy: 0.1845 - val_loss: 2.6125 - val_accuracy: 0.2178\n","Epoch 7/10\n","45/45 [==============================] - 34s 694ms/step - loss: 2.4982 - accuracy: 0.1739 - val_loss: 2.6125 - val_accuracy: 0.2178\n","Epoch 8/10\n","45/45 [==============================] - 33s 691ms/step - loss: 2.4982 - accuracy: 0.1835 - val_loss: 2.6125 - val_accuracy: 0.2178\n","Epoch 9/10\n","45/45 [==============================] - 33s 693ms/step - loss: 2.4982 - accuracy: 0.1835 - val_loss: 2.6125 - val_accuracy: 0.2178\n","Epoch 10/10\n","45/45 [==============================] - 33s 690ms/step - loss: 2.4982 - accuracy: 0.1796 - val_loss: 2.6125 - val_accuracy: 0.2178\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fd9194fdc90>"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","metadata":{"id":"s3o0fRAiS1DB"},"source":["DATA_PATH_RESCALE_TEST = \"/content/drive/MyDrive/ASESOFTWARE/CV/processed_dataset/Test\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IseEplMwHzS4"},"source":["pred = model.predict(test_ds)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-xrWm8hj6E-T"},"source":["prediction_list = []\n","\n","for i in range(pred.shape[0]):\n","  prediction_list.append(pred[i].argmax())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JI6B1Rus-7qy"},"source":["len(prediction_list)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sSt5sDZteEDT"},"source":["!nvidia-smi"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tx-mXBeS9mjX"},"source":["class_names = test_ds.class_names\n","print(pred[0].argmax())\n","print(class_names[])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"85o7Up1yA3r2"},"source":["image, label = next(iter(test_ds))\n","cv2_imshow(image[30].numpy().astype(\"uint8\"))\n","print(\"REAL LABEL: \"+class_names[label[30]])\n","print(\"PREDICTED LABEL: \"+class_names[prediction_list[30]])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fEdglsyEVURk"},"source":["loss, accuracy = model.evaluate(test_ds)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9bPcBgCMHrmt"},"source":["#from sklearn import metrics\n","\n","#print(\"DecisionTrees's Accuracy: \", metrics.accuracy_score(y_testset, pred))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Dzw9LEsaGg4m"},"source":["model.summary()"],"execution_count":null,"outputs":[]}]}